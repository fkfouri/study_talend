# version: '3'

services:
  # app:
  #   build: 
  #     context: ..
  #     dockerfile: .
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root
  #     - MYSQL_DATABASE=test
  #     - MYSQL_USER=talend
  #     - MYSQL_PASSWORD=talend      

  #   depends_on:
  #     - mysql 


  mysql:
    image: mysql:8.0.41
    container_name: mysql_container
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test
      - MYSQL_USER=talend
      - MYSQL_PASSWORD=talend
    ports:
      - "3306:3306"
    command: --init-file /docker-entrypoint-initdb.d/init.sql --local-infile=1
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql   
      - ./:/local/
      - db-volume2:/var/lib/mysql


  vault:
    image: hashicorp/vault:1.18
    container_name: vault_container
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
    ports:
      - "8200:8200"
    volumes:
      - ./vault/config:/vault/config
      - ./vault/file:/vault/file   


  zoo1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  # postgres:
  #   image: postgres:latest
  #   environment:
  #     - POSTGRES_USER=talend
  #     - POSTGRES_PASSWORD=talend
  #     - POSTGRES_DB=talend
  #   ports:
  #     - "5432:5432"

  # mariadb:
  #   image: mariadb:latest
  #   environment:
  #     - MARIADB_ROOT_PASSWORD=root
  #     - MARIADB_DATABASE=test
  #     - MARIADB_USER=talend
  #     - MARIADB_PASSWORD=talend
  #   ports:
  #     - "3307:3307"
  #   command: --init-file /docker-entrypoint-initdb.d/init.sql
  #   volumes:
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql            

  # kafka:
  #   image: apache/kafka:3.9.0
  #   container_name: broker
  #   environment:
  #     KAFKA_NODE_ID: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_NUM_PARTITIONS: 3      
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"

volumes:
    db-volume2:  
    kafka-data: